Commands Interepretation 

#AusisAPI(self, ausis) 
It's an interface for skills or plugins in AUSIS and recieved values from the second parameter(ausis) during execution function. Moreover this class implements a stateless function which cannot be implemented in packages that is related to Ausis. Some functions of AusisAPI are

#say
AusisAPI.say(self, text, color='', speak=True)
This function of the class AusisAPI gives an ability to the print out the text on screen any speak that text when the sound is enabled. If parameter speak has a value False (speak=False) then it only prints the text from the text parameter.

#String Input 
AusisAPI.input(self, prompt='', color='')
This function is used to take an input as a text from the user and printed on the console. We didn't use input() method to take an input from the user because it doesn't works properly with color codes on window's cmd so we used sys library for input.

#Input Number
AusisAPI.input_number(self, prompt='', color='', rtype=<class 'float'>, rmin=None, rmax=None)
This method takes an input as a numeric value from the user and return that numeric value to the method. If user entered incoorect number it will ask user to enter it again.

#Enable Voice
AusisAPI.enable_voice(self)
Enable voice method is capable of speaking text in voice that was passed as a parameter to Ausis.say() method.

#Disable Voice
AusisAPI.disable_voice(self)
Disable voice is a method of AusisAPI class that is used to stop text to speech output for every text that was passed to Ausis.say() method.

#Is Voice Enabled
AusisAPI.is_voice_enabled(self)
in case of checking voice is enabled or disabled. This method invoked and returned True or False if voice is anabled or disabled while default voice is disabled.

#Get Data
AusisAPI.get_data(self, key)
It takes some keys from the memory to attain online data such as news, time, weather forecast by using user's current location and country information.

#Add Data
AusisAPI.add_data(self, key, value)
Ausis requires some keys to get online data from different sources such as news, time etc. This method is used to get value and key and stored that into a memory with .json extension inside memory directory for future achievements.

#Update Data
AusisAPI.update_data(self, key, value)
In case of changing sources location for news and different online stuff, keys must be updated with the help of this update_data() method.

#Delete Data
AusisAPI.del_data(self, key)
In case of deleting keys from the memory this method is here to help in deleting that keys from the memory  immediately. 

#Exit
AusisAPI.exit(self)
This function of the class AusisAPI will exit from the Ausis interface immediately and return to the main console